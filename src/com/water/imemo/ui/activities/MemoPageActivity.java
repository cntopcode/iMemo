package com.water.imemo.ui.activities;import java.util.List;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.database.sqlite.SQLiteDatabase;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.view.Window;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ListView;import android.widget.TextView;import com.water.imemo.R;import com.water.imemo.bean.MyMemo;import com.water.imemo.db.DBUtils;import com.water.imemo.db.TableMyMemo;import com.water.imemo.ui.layout.RefreshableView;import com.water.imemo.ui.layout.RefreshableView.PullToRefreshListener;import com.water.imemo.utils.Constants;public class MemoPageActivity extends Activity{		private static final String TAG = MemoPageActivity.class.getSimpleName();	private ListView listView;	private List<MyMemo> data;	private Context context;	private Button button;		private RefreshableView refreshView;		@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		requestWindowFeature(Window.FEATURE_NO_TITLE);		setContentView(R.layout.memolist);		context = this;		listView = (ListView) findViewById(R.id.memoList);		listView.setOnItemClickListener(itemClickListener);		button = (Button) findViewById(R.id.memoListNewButton);		button.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View view) {				Context context = MemoPageActivity.this;				Intent intent = new Intent(context,EditorActivity.class);				intent.putExtra("openType", Constants.NEW_MEMO_START_EDITOR);				context.startActivity(intent);			}		});		refreshView = (RefreshableView) findViewById(R.id.refreshList);		refreshView.setOnRefreshListener(new PullToRefreshListener(){			@Override			public void onRefresh() {				try {					Thread.sleep(10000);				} catch (InterruptedException e) {					e.printStackTrace();				}				refreshView.finishRefreshing();			}		});				}		private OnItemClickListener itemClickListener = new OnItemClickListener() {		@Override		public void onItemClick(AdapterView<?> adapter, View view, int pos,long arg3) {			int memoid = view.getId();			Log.d(TAG, "memoid:"+memoid);			Intent intent = new Intent(context,EditorActivity.class);			intent.putExtra("openType", "modify");			intent.putExtra("memoID", memoid);			context.startActivity(intent);		}	};	@Override	protected void onResume() {		super.onResume();				SQLiteDatabase database = DBUtils.getInstance().getDataBase();		TableMyMemo tableMemo = DBUtils.getInstance().getMyMemoDB();		data = tableMemo.getMemo(database, 0, 10);		listView.setAdapter(new MemoListAdapter(this));	}			private class MemoListAdapter extends BaseAdapter{				private Context context;		private LayoutInflater inflater;				class ViewHolder{			TextView summary;			TextView time;		}				public MemoListAdapter(Context context) {			super();			this.context = context;			inflater = LayoutInflater.from(this.context);		}		@Override		public int getCount() {			return data.size();		}		@Override		public Object getItem(int arg0) {			return null;		}		@Override		public long getItemId(int arg0) {			return 0;		}		@Override		public View getView(int pos, View convertView, ViewGroup parent) {			ViewHolder holder = null;			if(convertView == null){				holder = new ViewHolder();				convertView = inflater.inflate(R.layout.memolistitem, null);				holder.summary = (TextView) convertView.findViewById(R.id.memoSummary);				holder.time = (TextView) convertView.findViewById(R.id.memoTime);				convertView.setTag(holder);			}else{				holder = (ViewHolder) convertView.getTag();			}			holder.summary.setText(data.get(pos).getContentSummary());			holder.time.setText(data.get(pos).getPosttimeStr());			convertView.setId(data.get(pos).getId());			return convertView;		}					}		}